<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="0" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-02T18:47:58 IST" name="guru99 customer" finished-at="2023-12-02T18:48:29 IST" duration-ms="30943">
    <groups>
      <group name="whitebox">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- whitebox -->
      <group name="functional">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- functional -->
      <group name="blackbox">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- blackbox -->
      <group name="daily build">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- daily build -->
      <group name="weekly build">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- weekly build -->
      <group name="regression">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" name="login" class="TestCases.TC_Login_Guru99_001"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2023-12-02T18:47:58 IST" name="Guru99" finished-at="2023-12-02T18:48:29 IST" duration-ms="30943">
      <class name="TestCases.TC_Login_Guru99_001">
        <test-method is-config="true" signature="extentReports()[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:47:58 IST" name="extentReports" finished-at="2023-12-02T18:47:58 IST" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReports -->
        <test-method is-config="true" signature="initialiseBrowser(org.testng.ITestContext,java.lang.String,java.lang.String)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:47:58 IST" name="initialiseBrowser" finished-at="2023-12-02T18:48:10 IST" duration-ms="11474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1de5cc88]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.demo.guru99.com/V4/index.php]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseBrowser -->
        <test-method is-config="true" signature="groupsstatus(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:11 IST" name="groupsstatus" finished-at="2023-12-02T18:48:11 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupsstatus -->
        <test-method signature="login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:11 IST" name="login" data-provider="Guru_Customer_Details" finished-at="2023-12-02T18:48:13 IST" duration-ms="1967" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5600a5da]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at TestCases.TC_Login_Guru99_001.login(TC_Login_Guru99_001.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="failedStatus(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:15 IST" name="failedStatus" finished-at="2023-12-02T18:48:16 IST" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedStatus -->
        <test-method is-config="true" signature="groupsstatus(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:16 IST" name="groupsstatus" finished-at="2023-12-02T18:48:16 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupsstatus -->
        <test-method signature="login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:16 IST" name="login" data-provider="Guru_Customer_Details" finished-at="2023-12-02T18:48:18 IST" duration-ms="2175" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5eed6dfb]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at TestCases.TC_Login_Guru99_001.login(TC_Login_Guru99_001.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="failedStatus(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:19 IST" name="failedStatus" finished-at="2023-12-02T18:48:19 IST" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedStatus -->
        <test-method is-config="true" signature="groupsstatus(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:19 IST" name="groupsstatus" finished-at="2023-12-02T18:48:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupsstatus -->
        <test-method signature="login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:19 IST" name="login" data-provider="Guru_Customer_Details" finished-at="2023-12-02T18:48:22 IST" duration-ms="2623" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@551be9f6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at TestCases.TC_Login_Guru99_001.login(TC_Login_Guru99_001.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="failedStatus(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:23 IST" name="failedStatus" finished-at="2023-12-02T18:48:24 IST" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedStatus -->
        <test-method is-config="true" signature="groupsstatus(java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:24 IST" name="groupsstatus" finished-at="2023-12-02T18:48:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupsstatus -->
        <test-method signature="login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:24 IST" name="login" data-provider="Guru_Customer_Details" finished-at="2023-12-02T18:48:27 IST" duration-ms="3454" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@56a4abd0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at TestCases.TC_Login_Guru99_001.login(TC_Login_Guru99_001.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="failedStatus(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:28 IST" name="failedStatus" finished-at="2023-12-02T18:48:29 IST" duration-ms="763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=TC_Login_Guru99_001.login([Ljava.lang.Object;)[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestCases.TC_Login_Guru99_001.login(java.lang.Object[]) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:29 IST" name="tearDown" finished-at="2023-12-02T18:48:29 IST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="generateReports()[pri:0, instance:TestCases.TC_Login_Guru99_001@662ac478]" started-at="2023-12-02T18:48:29 IST" name="generateReports" finished-at="2023-12-02T18:48:31 IST" duration-ms="2076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReports -->
      </class> <!-- TestCases.TC_Login_Guru99_001 -->
    </test> <!-- Guru99 -->
  </suite> <!-- guru99 customer -->
</testng-results>
